# for color
#set -g default-terminal "xterm-256color"
#set-option -ga terminal-overrides ",*256*:Tc"

set-window-option -g mode-keys vi # rm mouse mode fail
set -g mouse on

# Start numbering at 1
set -g base-index 1

set -g renumber-windows on
set -g set-titles on

# auto window rename
set-window-option -g automatic-rename

# do not start login shell for new window
#set -g default-command zsh

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on



# ----- STYLING -----
set -g status-position bottom
set -g status-bg colour234
set -g status-fg colour137
#set -g status-attr dim
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style "fg=colour81"
setw -ag window-status-current-style "bg=colour238"
#setw -ag window-status-current-style "attr=bold"
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g status-style "fg=colour138"
setw -ag status-style "bg=colour235"
#setw -ag status-style "attr=none"
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

#setw -g window-status-bell-attr bold
#setw -g window-status-bell-fg colour255
#setw -g window-status-bell-bg colour1

set-option -g status-bg colour235 #base02
#set-option -g status-fg colour136 #yellow



######set-option -g status-attr default
###
#### default window title colors
######set-window-option -g window-status-fg colour244 #base0
######set-window-option -g window-status-bg default
####set-window-option -g window-status-attr dim
###
#### active window title colors
######set-window-option -g window-status-current-fg colour166 #orange
######set-window-option -g window-status-current-bg default
####set-window-option -g window-status-current-attr bright
###
#### pane border
######set-option -g pane-border-fg colour235 #base02
######set-option -g pane-active-border-fg colour240 #base01
###
#### message text
######set-option -g message-bg colour235 #base02
######set-option -g message-fg colour166 #orange
###
#### pane number display
###set-option -g display-panes-active-colour colour33 #blue
###set-option -g display-panes-colour colour166 #orange
#### clock
###set-window-option -g clock-mode-colour green #green
###
###
# displays "prefix" (in red) in statusline when prefix is pressed
set -g status-left "#[bg=red]#{s/root//:client_key_table}"
###
####set -g status-interval 1
###set -g status-justify centre # center align window list
####set -g status-left-length 20
###set -g status-right-length 0
####set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
####set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'



# ---- KEY BINDINGS -----

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-q

bind-key C-a last-window

# view current pane history (including colors) with "less" in new window
bind-key u capture-pane -S - -E - -e -b lesshist \; new-window -n "history" 'tmux show-buffer -b lesshist| less -R +G'

bind < copy-mode

bind c new-window -ac "#{pane_current_path}"

# set window split
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -h -c "#{pane_current_path}"

# maximize pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'


# hjkl pane traversal
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

bin -n M-j next-window
bin -n M-k previous-window

#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
#is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
#  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
#
#bind -n C-h run "($is_vim && tmux send-keys C-h) || \
#                 tmux select-pane -L"
#
#bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
#                 ($is_fzf && tmux send-keys C-j) || \
#                 tmux previous-window"
#
#bind -n C-k run "($is_vim && tmux send-keys C-k) || \
#                 ($is_fzf && tmux send-keys C-k)  || \
#                 tmux next-window"
#
#bind -n C-l run "($is_vim && tmux send-keys C-l) || \
#                 tmux select-pane -R"
#
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
##bind -r C-h previous-window # select previous window
##bind -r C-k next-window # select next window
##bind -r C-j previous-window # select previous window
##bind -r C-l next-window # select next window

# set to main-horizontal, 66% height for main pane
#bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
#bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Vi copypaste mode
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel



# tmux plugin manager
# List of plugins
###set -g @plugin 'tmux-plugins/tpm'
###set -g @plugin 'tmux-plugins/tmux-sensible'
###
###set -g @resurrect-processes 'alsamixer ncmpcpp calcurse info journalctl glances'
###set -g @plugin 'tmux-plugins/tmux-resurrect'

#set -g @plugin 'odedlaz/tmux-onedark-theme'
#set -g @plugin 'christoomey/vim-tmux-navigator'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

###
##TODO
#### vim: fdm=marker
###
###set -g prefix C-a
###bind-key a send-prefix
###unbind-key C-b
###
#### http://stackoverflow.com/questions/8645053/how-do-i-start-tmux-with-my-current-environment
#### so tmux gets new prompt stuff when presenting
###set -ga update-environment ' ITERM_PROFILE'
###
#### https://gist.github.com/datagrok/2199506
###set -ga update-environment ' VIRTUAL_ENV'
###
###set -ga update-environment ' PWD SESSION'
###
###set -ga update-environment ' PROGRAMMING_SUCKS'
###
###set -g status-keys emacs
###setw -g mode-keys vi
###
###bind-key -t vi-edit C-u delete-line
###
#### {{{ status line prettification
###
#### disabled for now :-(
#### set -g status-left '#(~/.common-public/bin/tmux_status)'
#### set -g status-interval 1
###set -g status-left '#[bg=colour236,fg=colour246] [#[fg=colour231]#S#[fg=colour246]] #[default]'
###set -g status-left-length 50
###set -g status-bg colour252
###set -g status-right " %H:%M %d-%b-%y "
###setw -g window-status-separator ""
###setw -g window-status-format " #I:#{?window_flags,#{window_flags},}#W "
###setw -g window-status-current-format " #I:#{?window_flags,#{window_flags},}#W "
###setw -g window-status-current-bg colour236
###setw -g window-status-current-fg colour156
###setw -g window-status-current-attr bright
###
#### }}}
###
###setw -g clock-mode-style 12
###
###bind-key C-n next-window
###bind-key C-p previous-window
###bind-key C-a last-window
###
#### {{{ pane management
###
###bind-key k select-pane -U
###bind-key j select-pane -D
###bind-key h select-pane -L
###bind-key l select-pane -R
###
###unbind-key Up
###unbind-key Down
###unbind-key Left
###unbind-key Right
###
###bind-key M-k resize-pane -U 5
###bind-key M-j resize-pane -D 5
###bind-key M-h resize-pane -L 5
###bind-key M-l resize-pane -R 5
###
###unbind-key M-Up
###unbind-key M-Down
###unbind-key M-Left
###unbind-key M-Right
###
###bind-key C-k resize-pane -U
###bind-key C-j resize-pane -D
###bind-key C-h resize-pane -L
###bind-key C-l resize-pane -R
###
###unbind-key C-Up
###unbind-key C-Down
###unbind-key C-Left
###unbind-key C-Right
###
#### }}}
###
###set -g history-limit 5000
###
